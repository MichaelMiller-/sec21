find_package(Catch2 CONFIG REQUIRED)
find_package(Boost 1.70 REQUIRED)
find_package(fmt REQUIRED)

## speed up the compile-time process
add_library(catch_main STATIC catch_main.cpp)
target_link_libraries(catch_main PUBLIC Catch2::Catch2 Catch2::Catch2WithMain)

function(test filename)
    project(test.${filename})
    add_executable(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/${filename}.cpp)

    target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_20)

    target_link_libraries(${PROJECT_NAME} PRIVATE Boost::boost)
    target_link_libraries(${PROJECT_NAME} PRIVATE fmt::fmt-header-only)
    target_link_libraries(${PROJECT_NAME} PRIVATE catch_main)
    target_link_libraries(${PROJECT_NAME} PRIVATE sec21::sec21)
    target_link_libraries(${PROJECT_NAME} PRIVATE enable_compiler_warnings)

    add_test(
            NAME ${PROJECT_NAME}
            COMMAND ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}
            WORKING_DIRECTORY ${PROJECT_BINARY_DIR})
endfunction()

## unit tests via catch (alphabetical order)
##
test("aabb")
# test("actor_lib_feature")
test("all_of")
test("alphabet")
test("any_of")
test("arity")
test("bit_pattern")
test("concat")
# test("curry")
# test("database.query")
test("debug_timer")
test("dispatcher")
test("double_values")
test("drawdown")
test("enumerate")
test("enum_to_string")
test("erase_if_index")
# test("event.input_manager")
test("flat_vector")
test("for_each_chunk")
test("for_each_indexed")
test("in_range")
test("make_iota_array")
test("math")
test("min_absent")
test("numeric.flatten")
test("numeric.make_matrix")
test("numeric.make_vector")
test("polygon")
test("projection_func")
test("resource")
test("scope_guard")
test("strong_type")
test("timestamp")
test("transform")
test("to_array")
test("type_traits.has_type")
test("type_traits.index_of")
test("type_traits.is_specialized")
test("type_traits.is_std_string")
test("type_traits.is_tuple")
test("units.dimension")
test("units.quantity")
test("units.ratio")
test("validate")
test("zip")


if (ENABLE_WORK_IN_PROGRESS)
    test("chaining")
    test("coroutines")
    test("demux")
    test("dictionary")
    test("dimap")
    test("disk_space")
    test("entity_manager")
    test("features.concepts")
    test("features.coroutines")
    # test("features.concurrency")
    test("features.perfect_forwarding")
    test("features.type_traits")
    test("geometry")
    test("literal_template")
    test("log")
    test("material")
    test("pipeable")
    test("pipe")
    test("process")
    test("quadradic_matrix_plotter")
    test("ranges")
    # test("reflection")
    test("replay_manager")
    # test("sat_sudoku")
    test("serializer")
    test("snake_ladders")
    test("strange_heap")
    test("synchronized")
    test("system_reader")
    # test("tasks")
    test("test_framework")
    # test("thread_shared_state")
endif ()
