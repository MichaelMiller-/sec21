name: Clang

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Compiler
        run: |
          sudo apt install clang-10.0
          sudo pip install gcovr
          
      - name: Install Dependencies
        shell: bash
        working-directory: ${{runner.workspace}}
        run: |
          git clone https://github.com/Microsoft/vcpkg.git 
          cd vcpkg
          ./bootstrap-vcpkg.sh
          ./vcpkg install boost-core
          ./vcpkg install boost-function-types 
          ./vcpkg install boost-geometry
          ./vcpkg install boost-hana
          ./vcpkg install boost-math
          ./vcpkg install boost-outcome
          ./vcpkg install boost-program-options
          ./vcpkg install boost-qvm
          ./vcpkg install boost-range
          ./vcpkg install boost-ublas
          ./vcpkg install catch2
          ./vcpkg install glm
          ./vcpkg install nlohmann-json
          ./vcpkg install spdlog
          
      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          export CC=`which clang-10.0`
          export CXX=`which clang++-10.0`
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.config}} -DCMAKE_TOOLCHAIN_FILE=${{runner.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{matrix.config}}

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest --build-config ${{matrix.config}}          
